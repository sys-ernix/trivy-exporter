- name: Build Trivy exporter
  hosts: localhost
  connection: local
  tasks:

    - name: Download Go dependencies
      shell: |
        cd ../trivy-exporter
        go mod download
        go mod tidy

    - name: Compile for AMD64
      shell: |
        cd ../trivy-exporter
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o trivy-exporter-amd64
      args:
        creates: trivy-exporter-amd64

    - name: Compile for ARM64
      shell: |
        cd ../trivy-exporter
        GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o trivy-exporter-arm64
      args:
        creates: trivy-exporter-arm64

- name: Deploy Trivy exporter
  hosts: all
  become: true
  vars:
    go_arch_map:
      x86_64: "amd64"
      aarch64: "arm64"
    go_arch: "{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}"

  tasks:
    - name: Determine system architecture
      set_fact:
        system_arch: "{{ ansible_architecture }}"

    - name: Install dependencies (Debian)
      apt:
        name: [wget, trivy]
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install dependencies (Alpine)
      apk:
        name: [wget]
        update_cache: yes
      when: ansible_os_family == "Alpine"

    - name: Install Trivy (Alpine)
      shell: wget -q -O - https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
      args:
        creates: /usr/local/bin/trivy
      when: ansible_os_family == "Alpine"

    - name: Create directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /opt/trivy-exporter
        - /var/log

    - name: Copy binary based on architecture
      copy:
        src: "trivy-exporter-{{ go_arch }}"
        dest: /opt/trivy-exporter/trivy-exporter
        mode: '0755'

    - name: Create systemd service (Debian)
      template:
        src: trivy-exporter.service.j2
        dest: /etc/systemd/system/trivy-exporter.service
        mode: '0644'
      when: ansible_os_family == "Debian"

    - name: Create OpenRC service (Alpine)
      template:
        src: trivy-exporter.openrc.j2
        dest: /etc/init.d/trivy-exporter
        mode: '0755'
      when: ansible_os_family == "Alpine"